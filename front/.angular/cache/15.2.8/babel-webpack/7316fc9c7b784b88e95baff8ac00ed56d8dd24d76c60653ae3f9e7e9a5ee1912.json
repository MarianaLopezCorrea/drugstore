{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SellModalComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Total: \", ctx_r0.totalPurchase, \"\");\n  }\n}\nexport class SellModalComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.medicamentId = 0;\n    this.unitQuantity = 0;\n    this.modalVisible = true;\n    this.totalPurchase = 0;\n  }\n  calculateTotal() {\n    const quantity = 10;\n    const url = `http://localhost:8091/api/sale/get_unit_price/${this.medicamentId}?quantity=${quantity}`;\n    this.apiService.getUnitPrice(url).subscribe(price => {\n      this.totalPurchase = price * this.unitQuantity;\n    }, error => {\n      console.log(error);\n    });\n  }\n  sellMedicament() {\n    // Implementa la lógica de venta del medicamento\n    // ...\n    this.closeModal(); // Cierra el modal después de la venta\n  }\n\n  closeModal() {\n    this.modalVisible = true; // Actualiza el estado de modalVisible a false\n  }\n}\n\nSellModalComponent.ɵfac = function SellModalComponent_Factory(t) {\n  return new (t || SellModalComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\nSellModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SellModalComponent,\n  selectors: [[\"app-sell-modal\"]],\n  inputs: {\n    medicamentId: \"medicamentId\",\n    modalVisible: \"modalVisible\"\n  },\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"modal\"], [3, \"click\"], [\"for\", \"unitQuantity\"], [\"type\", \"number\", \"id\", \"unitQuantity\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"]],\n  template: function SellModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function SellModalComponent_Template_button_click_1_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵtext(2, \"Cerrar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h2\");\n      i0.ɵɵtext(4, \"Venta de Medicamento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 2);\n      i0.ɵɵtext(8, \"Cantidad de unidades:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function SellModalComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.unitQuantity = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function SellModalComponent_Template_button_click_10_listener() {\n        return ctx.calculateTotal();\n      });\n      i0.ɵɵtext(11, \"Total de compra\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, SellModalComponent_p_12_Template, 2, 1, \"p\", 4);\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function SellModalComponent_Template_button_click_13_listener() {\n        return ctx.sellMedicament();\n      });\n      i0.ɵɵtext(14, \"Realizar Venta\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"Medicamento ID: \", ctx.medicamentId, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.unitQuantity);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.totalPurchase !== null);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAOIA,yBAAkC;IAAAA,YAA0B;IAAAA,iBAAI;;;;IAA9BA,eAA0B;IAA1BA,0DAA0B;;;ACChE,OAAM,MAAOC,kBAAkB;EAO7BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAC5B,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,aAAa,GAAG,CAAC;EACxB;EAEAC,cAAc;IACZ,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,GAAG,GAAG,iDAAiD,IAAI,CAACN,YAAY,aAAaK,QAAQ,EAAE;IACrG,IAAI,CAACN,UAAU,CAACQ,YAAY,CAACD,GAAG,CAAC,CAACE,SAAS,CACxCC,KAAa,IAAI;MAChB,IAAI,CAACN,aAAa,GAAGM,KAAK,GAAG,IAAI,CAACR,YAAY;IAChD,CAAC,EACAS,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAG,cAAc;IACZ;IACA;IAEA,IAAI,CAACC,UAAU,EAAE,CAAC,CAAC;EACrB;;EAEAA,UAAU;IACR,IAAI,CAACZ,YAAY,GAAG,IAAI,CAAC,CAAC;EAC5B;;;AApCWL,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAkB;EAAAC;IAAAhB;IAAAE;EAAA;EAAAe;EAAAC;EAAAC;EAAAC;IAAA;MDR/BxB,8BAAmB;MACPA;QAAA,OAASyB,gBAAY;MAAA,EAAC;MAACzB,sBAAM;MAAAA,iBAAS;MAC9CA,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,yBAAG;MAAAA,YAAkC;MAAAA,iBAAI;MACzCA,gCAA0B;MAAAA,qCAAqB;MAAAA,iBAAQ;MACvDA,gCAAkE;MAA3BA;QAAA;MAAA,EAA0B;MAAjEA,iBAAkE;MAClEA,kCAAmC;MAA3BA;QAAA,OAASyB,oBAAgB;MAAA,EAAC;MAACzB,gCAAe;MAAAA,iBAAS;MAC3DA,iEAAgE;MAChEA,kCAAmC;MAA3BA;QAAA,OAASyB,oBAAgB;MAAA,EAAC;MAACzB,+BAAc;MAAAA,iBAAS;;;MALvDA,eAAkC;MAAlCA,+DAAkC;MAEEA,eAA0B;MAA1BA,0CAA0B;MAE7DA,eAA4B;MAA5BA,iDAA4B","names":["i0","SellModalComponent","constructor","apiService","medicamentId","unitQuantity","modalVisible","totalPurchase","calculateTotal","quantity","url","getUnitPrice","subscribe","price","error","console","log","sellMedicament","closeModal","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\angular\\front\\src\\app\\sell-modal\\sell-modal.component.html","C:\\angular\\front\\src\\app\\sell-modal\\sell-modal.component.ts"],"sourcesContent":["<div class=\"modal\">\n    <button (click)=\"closeModal()\">Cerrar</button>\n    <h2>Venta de Medicamento</h2>\n    <p>Medicamento ID: {{ medicamentId }}</p>\n    <label for=\"unitQuantity\">Cantidad de unidades:</label>\n    <input type=\"number\" id=\"unitQuantity\" [(ngModel)]=\"unitQuantity\">\n    <button (click)=\"calculateTotal()\">Total de compra</button>\n    <p *ngIf=\"totalPurchase !== null\">Total: {{ totalPurchase }}</p>\n    <button (click)=\"sellMedicament()\">Realizar Venta</button>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApiService } from '../service/api.service';\n\n@Component({\n  selector: 'app-sell-modal',\n  templateUrl: './sell-modal.component.html',\n  styleUrls: ['./sell-modal.component.scss']\n})\nexport class SellModalComponent {\n  @Input() medicamentId: number;\n  @Input() modalVisible: boolean;\n\n  unitQuantity: number;\n  totalPurchase: number;\n\n  constructor(private apiService: ApiService) {\n    this.medicamentId = 0;\n    this.unitQuantity = 0;\n    this.modalVisible = true;\n    this.totalPurchase = 0;\n  }\n\n  calculateTotal() {\n    const quantity = 10;\n    const url = `http://localhost:8091/api/sale/get_unit_price/${this.medicamentId}?quantity=${quantity}`;\n    this.apiService.getUnitPrice(url).subscribe(\n      (price: number) => {\n        this.totalPurchase = price * this.unitQuantity;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  sellMedicament() {\n    // Implementa la lógica de venta del medicamento\n    // ...\n\n    this.closeModal(); // Cierra el modal después de la venta\n  }\n  \n  closeModal() {\n    this.modalVisible = true; // Actualiza el estado de modalVisible a false\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}