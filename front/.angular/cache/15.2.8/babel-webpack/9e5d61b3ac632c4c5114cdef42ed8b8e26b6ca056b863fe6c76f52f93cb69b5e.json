{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"./sell-modal/sell-modal.component\";\nfunction AppComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Medicaments \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 10);\n    i0.ɵɵtext(2, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 11);\n    i0.ɵɵtext(4, \"Fecha de Fabricaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 12);\n    i0.ɵɵtext(6, \"Fecha de Vencimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 13);\n    i0.ɵɵtext(8, \"Cantidad en Stock\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 14);\n    i0.ɵɵtext(10, \"Valor Unitario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 15);\n    i0.ɵɵtext(12, \"Acciones\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_6_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const medicament_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editProduct(medicament_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_6_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const medicament_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.confirmSale(medicament_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_6_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const medicament_r6 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteMedicament(medicament_r6));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medicament_r6 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.formattedManufacturingDates[ctx_r3.medicaments.indexOf(medicament_r6)]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.formattedExpirationDates[ctx_r3.medicaments.indexOf(medicament_r6)]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r6.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r6.unitPrice);\n  }\n}\nfunction AppComponent_ng_template_9_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 26);\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_template_9_small_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 26);\n    i0.ɵɵtext(1, \"La fecha de fabricaci\\u00F3n es requerida\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_template_9_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 26);\n    i0.ɵɵtext(1, \"La cantidad es requerida.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"label\", 20);\n    i0.ɵɵtext(2, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_ng_template_9_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.medicament.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, AppComponent_ng_template_9_small_4_Template, 2, 0, \"small\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 19)(6, \"label\", 23);\n    i0.ɵɵtext(7, \"manufacturingDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_ng_template_9_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.medicament.manufacturingDate = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, AppComponent_ng_template_9_small_9_Template, 2, 0, \"small\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 19)(11, \"label\", 25);\n    i0.ɵɵtext(12, \"Cantidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_ng_template_9_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.medicament.quantity = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, AppComponent_ng_template_9_small_14_Template, 2, 0, \"small\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.medicament.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.submitted && !ctx_r4.medicament.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.medicament.manufacturingDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.submitted && !ctx_r4.medicament.quantity);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.medicament.quantity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.submitted && !ctx_r4.medicament.quantity);\n  }\n}\nfunction AppComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.hideDialog());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_10_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.updateMedicament(ctx_r20.medicament));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"min-width\": \"50rem\"\n  };\n};\nconst _c1 = function () {\n  return [10, 25, 50];\n};\nconst _c2 = function () {\n  return {\n    width: \"450px\"\n  };\n};\nexport class AppComponent {\n  constructor(apiService, datePipe) {\n    this.apiService = apiService;\n    this.datePipe = datePipe;\n    this.medicaments = [];\n    this.submitted = false;\n    this.formattedManufacturingDates = [];\n    this.formattedExpirationDates = [];\n    this.modalVisible = false;\n    this.medicamentDialog = false;\n    this.selectedMedicamentId = 0;\n  }\n  ngOnInit() {\n    this.getMedicaments();\n  }\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(response => {\n      this.medicaments = response;\n      this.formatManufacturingDates();\n      this.formatExpirationDates();\n    }, error => {\n      console.log(error);\n    });\n  }\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  updateMedicament(medicament) {\n    this.medicamentDialog = true;\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(response => {\n      console.log('Medicamento actualizado exitosamente');\n    }, error => {\n      console.log('Error al actualizar el medicamento', error);\n    });\n  }\n  deleteMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(response => {\n      console.log('Medicamento eliminado exitosamente');\n    }, error => {\n      console.log('Error al eliminar el medicamento', error);\n    });\n  }\n  confirmSale(medicament) {\n    const quantity = 10;\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}?quantity=${quantity}`;\n    this.apiService.getUnitPrice(url).subscribe(unitPrice => {\n      console.log('Precio unitario obtenido:', unitPrice);\n      this.selectedMedicamentId = medicament.id; // Actualizar el medicamentId seleccionado\n      this.modalVisible = true;\n    }, error => {\n      console.log('Error al obtener el precio unitario del medicamento', error);\n    });\n  }\n  hideDialog() {\n    this.medicamentDialog = false;\n  }\n  editProduct(medicament) {\n    this.medicament = {\n      ...medicament\n    };\n    this.medicamentDialog = true;\n  }\n  onCloseModal() {\n    this.modalVisible = false;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.DatePipe));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 11,\n  vars: 15,\n  consts: [[\"styleClass\", \"p-datatable-gridlines\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"tableStyle\", \"rowsPerPageOptions\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [3, \"medicamentId\", \"modalVisible\", \"closeModal\"], [\"header\", \"Medicament Details\", \"styleClass\", \"p-fluid\", 3, \"visible\", \"modal\", \"visibleChange\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"footer\"], [1, \"table-header\"], [\"id\", \"name\", \"scope\", \"col\"], [\"id\", \"manufacturingDate\", \"scope\", \"col\"], [\"id\", \"expirationDate\", \"scope\", \"col\"], [\"id\", \"quantity\", \"scope\", \"col\"], [\"id\", \"unitPrice\", \"scope\", \"col\"], [\"id\", \"actions\", \"scope\", \"col\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-shopping-cart\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-trash\", 3, \"click\"], [1, \"field\"], [\"for\", \"name\"], [\"type\", \"text\", \"pInputText\", \"\", \"id\", \"name\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"p-error\", 4, \"ngIf\"], [\"for\", \"manufacturingDate\"], [\"type\", \"text\", \"pInputText\", \"\", \"id\", \"manufacturingDate\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"quantity\"], [1, \"p-error\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-text\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Lista de Medicamentos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p-table\", 0, 1);\n      i0.ɵɵtemplate(4, AppComponent_ng_template_4_Template, 2, 0, \"ng-template\", 2);\n      i0.ɵɵtemplate(5, AppComponent_ng_template_5_Template, 13, 0, \"ng-template\", 3);\n      i0.ɵɵtemplate(6, AppComponent_ng_template_6_Template, 15, 5, \"ng-template\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"app-sell-modal\", 5);\n      i0.ɵɵlistener(\"closeModal\", function AppComponent_Template_app_sell_modal_closeModal_7_listener() {\n        return ctx.onCloseModal();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p-dialog\", 6);\n      i0.ɵɵlistener(\"visibleChange\", function AppComponent_Template_p_dialog_visibleChange_8_listener($event) {\n        return ctx.medicamentDialog = $event;\n      });\n      i0.ɵɵtemplate(9, AppComponent_ng_template_9_Template, 15, 6, \"ng-template\", 7);\n      i0.ɵɵtemplate(10, AppComponent_ng_template_10_Template, 2, 0, \"ng-template\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.medicaments)(\"paginator\", true)(\"rows\", 5)(\"showCurrentPageReport\", true)(\"tableStyle\", i0.ɵɵpureFunction0(12, _c0))(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(13, _c1));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"medicamentId\", ctx.selectedMedicamentId)(\"modalVisible\", ctx.modalVisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c2));\n      i0.ɵɵproperty(\"visible\", ctx.medicamentDialog)(\"modal\", true);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.NgModel, i4.PrimeTemplate, i5.ButtonDirective, i6.InputText, i7.Table, i8.Dialog, i9.SellModalComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","apiService","datePipe","selectedMedicamentId","ngOnInit","getMedicaments","subscribe","response","medicaments","formatManufacturingDates","formatExpirationDates","error","console","log","formattedManufacturingDates","map","medicament","manufacturingDate","transform","formattedExpirationDates","expirationDate","updateMedicament","medicamentDialog","url","id","deleteMedicament","confirmSale","quantity","getUnitPrice","unitPrice","modalVisible","hideDialog","editProduct","onCloseModal","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\angular\\front\\src\\app\\app.component.html","C:\\angular\\front\\src\\app\\app.component.ts"],"sourcesContent":["<h2>Lista de Medicamentos</h2>\n\n\n<p-table #dt  [value]=\"medicaments\" [paginator]=\"true\" styleClass=\"p-datatable-gridlines\" [rows]=\"5\" [showCurrentPageReport]=\"true\" [tableStyle]=\"{ 'min-width': '50rem' }\"\n  currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n  [rowsPerPageOptions]=\"[10, 25, 50]\">\n  <ng-template pTemplate=\"caption\">\n    <div class=\"table-header\">\n        Medicaments\n\n    </div>\n</ng-template>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th id=\"name\" scope=\"col\">Nombre</th>\n      <th id=\"manufacturingDate\" scope=\"col\">Fecha de Fabricación</th>\n      <th id=\"expirationDate\" scope=\"col\">Fecha de Vencimiento</th>\n      <th id=\"quantity\" scope=\"col\">Cantidad en Stock</th>\n      <th id=\"unitPrice\" scope=\"col\">Valor Unitario</th>\n      <th id=\"actions\" scope=\"col\">Acciones</th> <!-- Nueva columna para las acciones -->\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-medicament>\n    <tr>\n      <td>{{ medicament.name }}</td>\n      <td>{{ formattedManufacturingDates[medicaments.indexOf(medicament)] }}</td>\n      <td>{{ formattedExpirationDates[medicaments.indexOf(medicament)] }}</td>\n      <td>{{ medicament.quantity }}</td>\n      <td>{{ medicament.unitPrice }}</td>\n      <td>\n        <button pButton type=\"button\" icon=\"pi pi-pencil\" (click)=\"editProduct(medicament)\"></button>\n        <button pButton type=\"button\" icon=\"pi pi-shopping-cart\" (click)=\"confirmSale(medicament)\"></button>\n        <button pButton type=\"button\" icon=\"pi pi-trash\" (click)=\"deleteMedicament(medicament)\"></button>\n      </td>\n    </tr>    \n  </ng-template>\n</p-table>\n\n<app-sell-modal [medicamentId]=\"selectedMedicamentId\" [modalVisible]=\"modalVisible\" (closeModal)=\"onCloseModal()\"></app-sell-modal>\n\n<p-dialog [(visible)]=\"medicamentDialog\" [style]=\"{ width: '450px' }\" header=\"Medicament Details\" [modal]=\"true\" styleClass=\"p-fluid\">\n  <ng-template pTemplate=\"content\">\n    <div class=\"field\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"medicament.name\" required autofocus />\n        <small class=\"p-error\" *ngIf=\"submitted && !medicament.name\">Name is required.</small>\n    </div>\n    <div class=\"field\">\n        <label for=\"manufacturingDate\">manufacturingDate</label>\n        <input type=\"text\" pInputText id=\"manufacturingDate\" [(ngModel)]=\"medicament.manufacturingDate\" required autofocus />\n        <small class=\"p-error\" *ngIf=\"submitted && !medicament.quantity\">La fecha de fabricación es requerida</small>\n    </div>\n    <div class=\"field\">\n      <label for=\"quantity\">Cantidad</label>\n      <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"medicament.quantity\" required autofocus />\n      <small class=\"p-error\" *ngIf=\"submitted && !medicament.quantity\">La cantidad es requerida.</small>\n    </div>\n      \n\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\">\n      <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\n      <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"updateMedicament(medicament)\"></button>\n  </ng-template>\n</p-dialog>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MedicamentDto } from './dto/medicament.dto';\nimport { ApiService } from './service/api.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  medicaments: MedicamentDto[] = [];\n  submitted: boolean = false;\n  medicament!: MedicamentDto;\n  formattedManufacturingDates: string[] = [];\n  formattedExpirationDates: string[] = [];\n  selectedMedicamentId: number;\n  modalVisible: boolean = false;\n  medicamentDialog: boolean = false;\n\n  constructor(private apiService: ApiService, private datePipe: DatePipe) {\n    this.selectedMedicamentId = 0;\n  }\n\n  ngOnInit() {\n    this.getMedicaments();\n  }\n\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(\n      response => {\n        this.medicaments = response;\n        this.formatManufacturingDates();\n        this.formatExpirationDates();\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate\n        ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate\n        ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  updateMedicament(medicament: MedicamentDto) {\n    this.medicamentDialog = true;\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(\n      response => {\n        console.log('Medicamento actualizado exitosamente');\n      },\n      error => {\n        console.log('Error al actualizar el medicamento', error);\n      }\n    );\n  }\n\n  deleteMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(\n      response => {\n        console.log('Medicamento eliminado exitosamente');\n      },\n      error => {\n        console.log('Error al eliminar el medicamento', error);\n      }\n    );\n  }\n\n  confirmSale(medicament: MedicamentDto) {\n    const quantity = 10;\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}?quantity=${quantity}`;\n    this.apiService.getUnitPrice(url).subscribe(\n      unitPrice => {\n        console.log('Precio unitario obtenido:', unitPrice);\n        this.selectedMedicamentId = medicament.id; // Actualizar el medicamentId seleccionado\n        this.modalVisible = true;\n      },\n      error => {\n        console.log('Error al obtener el precio unitario del medicamento', error);\n      }\n    );\n  }\n\n  hideDialog() {\n    this.medicamentDialog = false;\n}\n\neditProduct(medicament: MedicamentDto) {\n  this.medicament = { ...medicament };\n  this.medicamentDialog = true;\n}\n\n  onCloseModal() {\n    this.modalVisible = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}