{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(apiService, datePipe) {\n    this.apiService = apiService;\n    this.datePipe = datePipe;\n    this.medicaments = [];\n    this.formattedManufacturingDates = [];\n    this.formattedExpirationDates = [];\n    this.displayModal = false;\n    this.selectedMedicamentId = 0;\n  }\n  ngOnInit() {\n    this.getMedicaments();\n  }\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(data => {\n      this.medicaments = data;\n      this.formatManufacturingDates();\n      this.formatExpirationDates();\n      console.log(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  updateMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(response => {\n      console.log('Medicamento actualizado exitosamente');\n    }, error => {\n      console.log('Error al actualizar el medicamento', error);\n    });\n  }\n  deleteMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(response => {\n      console.log('Medicamento eliminado exitosamente');\n    }, error => {\n      console.log('Error al eliminar el medicamento', error);\n    });\n  }\n  getUnitPrice(medicament) {\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}`;\n    this.apiService.getUnitPrice(url).subscribe(unitPrice => {\n      console.log('Precio unitario obtenido:', unitPrice);\n    }, error => {\n      console.log('Error al obtener el precio unitario del medicamento', error);\n    });\n  }\n  openModal(medicamentId) {\n    this.selectedMedicamentId = medicamentId;\n    this.displayModal = true;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","AppComponent","constructor","apiService","datePipe","selectedMedicamentId","ngOnInit","getMedicaments","subscribe","data","medicaments","formatManufacturingDates","formatExpirationDates","console","log","error","formattedManufacturingDates","map","medicament","manufacturingDate","transform","formattedExpirationDates","expirationDate","updateMedicament","url","id","response","deleteMedicament","getUnitPrice","unitPrice","openModal","medicamentId","displayModal","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\angular\\front\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MedicamentDto } from './dto/medicament.dto';\nimport { ApiService } from './service/api.service';\nimport { DatePipe } from '@angular/common';\nimport { SellModalComponent } from '../app/sell-modal/sell-modal.component';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  medicaments: MedicamentDto[] = [];\n  formattedManufacturingDates: string[] = [];\n  formattedExpirationDates: string[] = [];\n  displayModal: boolean = false;\n  selectedMedicamentId: number;\n\n  constructor(private apiService: ApiService, private datePipe: DatePipe) {\n    this.selectedMedicamentId = 0;\n  }\n\n  ngOnInit() {\n    this.getMedicaments();\n  }\n\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(\n      (data: MedicamentDto[]) => {\n        this.medicaments = data;\n        this.formatManufacturingDates();\n        this.formatExpirationDates();\n        console.log(data);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate\n        ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate\n        ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  updateMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(\n      (response) => {\n        console.log('Medicamento actualizado exitosamente');\n      },\n      (error) => {\n        console.log('Error al actualizar el medicamento', error);\n      }\n    );\n  }\n\n  deleteMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(\n      (response) => {\n        console.log('Medicamento eliminado exitosamente');\n      },\n      (error) => {\n        console.log('Error al eliminar el medicamento', error);\n      }\n    );\n  }\n\n  getUnitPrice(medicament: MedicamentDto) {\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}`;\n    this.apiService.getUnitPrice(url).subscribe(\n      (unitPrice: number) => {\n        console.log('Precio unitario obtenido:', unitPrice);\n      },\n      (error) => {\n        console.log('Error al obtener el precio unitario del medicamento', error);\n      }\n    );\n  }\n\n  openModal(medicamentId: number) {\n    this.selectedMedicamentId = medicamentId;\n    this.displayModal = true;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}