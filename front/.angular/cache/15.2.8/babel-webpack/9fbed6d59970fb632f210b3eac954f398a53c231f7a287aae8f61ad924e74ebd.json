{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"./sell-modal/sell-modal.component\";\nfunction AppComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Medicaments \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 7);\n    i0.ɵɵtext(2, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 8);\n    i0.ɵɵtext(4, \"Fecha de Fabricaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 9);\n    i0.ɵɵtext(6, \"Fecha de Vencimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 10);\n    i0.ɵɵtext(8, \"Cantidad en Stock\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 11);\n    i0.ɵɵtext(10, \"Valor Unitario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 12);\n    i0.ɵɵtext(12, \"Acciones\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_6_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const medicament_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateMedicament(medicament_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_6_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const medicament_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.getUnitPrice(medicament_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_6_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const medicament_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.deleteMedicament(medicament_r4));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medicament_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.formattedManufacturingDates[ctx_r3.medicaments.indexOf(medicament_r4)]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.formattedExpirationDates[ctx_r3.medicaments.indexOf(medicament_r4)]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r4.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r4.unitPrice);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"min-width\": \"50rem\"\n  };\n};\nconst _c1 = function () {\n  return [10, 25, 50];\n};\nexport class AppComponent {\n  constructor(apiService, datePipe) {\n    this.apiService = apiService;\n    this.datePipe = datePipe;\n    this.medicaments = [];\n    this.formattedManufacturingDates = [];\n    this.formattedExpirationDates = [];\n    this.modalVisible = false;\n    this.selectedMedicamentId = 0;\n  }\n  ngOnInit() {\n    this.getMedicaments();\n  }\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(response => {\n      this.medicaments = response;\n      this.formatManufacturingDates();\n      this.formatExpirationDates();\n    }, error => {\n      console.log(error);\n    });\n  }\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  updateMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(response => {\n      console.log('Medicamento actualizado exitosamente');\n    }, error => {\n      console.log('Error al actualizar el medicamento', error);\n    });\n  }\n  deleteMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(response => {\n      console.log('Medicamento eliminado exitosamente');\n    }, error => {\n      console.log('Error al eliminar el medicamento', error);\n    });\n  }\n  getUnitPrice(medicament) {}\n  onCloseModal() {\n    this.modalVisible = false;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.DatePipe));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 8,\n  vars: 10,\n  consts: [[\"styleClass\", \"p-datatable-gridlines\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"tableStyle\", \"rowsPerPageOptions\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [3, \"medicamentId\", \"modalVisible\", \"closeModal\"], [1, \"table-header\"], [\"id\", \"name\", \"scope\", \"col\"], [\"id\", \"manufacturingDate\", \"scope\", \"col\"], [\"id\", \"expirationDate\", \"scope\", \"col\"], [\"id\", \"quantity\", \"scope\", \"col\"], [\"id\", \"unitPrice\", \"scope\", \"col\"], [\"id\", \"actions\", \"scope\", \"col\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-shopping-cart\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-trash\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Lista de Medicamentos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p-table\", 0, 1);\n      i0.ɵɵtemplate(4, AppComponent_ng_template_4_Template, 2, 0, \"ng-template\", 2);\n      i0.ɵɵtemplate(5, AppComponent_ng_template_5_Template, 13, 0, \"ng-template\", 3);\n      i0.ɵɵtemplate(6, AppComponent_ng_template_6_Template, 15, 5, \"ng-template\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"app-sell-modal\", 5);\n      i0.ɵɵlistener(\"closeModal\", function AppComponent_Template_app_sell_modal_closeModal_7_listener() {\n        return ctx.onCloseModal();\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.medicaments)(\"paginator\", true)(\"rows\", 5)(\"showCurrentPageReport\", true)(\"tableStyle\", i0.ɵɵpureFunction0(8, _c0))(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c1));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"medicamentId\", ctx.selectedMedicamentId)(\"modalVisible\", ctx.modalVisible);\n    }\n  },\n  dependencies: [i3.PrimeTemplate, i4.ButtonDirective, i5.Table, i6.SellModalComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAKIA,8BAA0B;IACtBA,6BAEJ;IAAAA,iBAAM;;;;;IAGNA,0BAAI;IACwBA,sBAAM;IAAAA,iBAAK;IACrCA,6BAAuC;IAAAA,yCAAoB;IAAAA,iBAAK;IAChEA,6BAAoC;IAAAA,oCAAoB;IAAAA,iBAAK;IAC7DA,8BAA8B;IAAAA,iCAAiB;IAAAA,iBAAK;IACpDA,8BAA+B;IAAAA,+BAAc;IAAAA,iBAAK;IAClDA,+BAA6B;IAAAA,yBAAQ;IAAAA,iBAAK;;;;;;IAI5CA,0BAAI;IACEA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAAkE;IAAAA,iBAAK;IAC3EA,0BAAI;IAAAA,YAA+D;IAAAA,iBAAK;IACxEA,0BAAI;IAAAA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,aAA0B;IAAAA,iBAAK;IACnCA,2BAAI;IACgDA;MAAA;MAAA;MAAA;MAAA,OAASA,qDAA4B;IAAA,EAAC;IAACA,iBAAS;IAClGA,mCAA4F;IAAnCA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAwB;IAAA,EAAC;IAACA,iBAAS;IACrGA,mCAAwF;IAAvCA;MAAA;MAAA;MAAA;MAAA,OAASA,qDAA4B;IAAA,EAAC;IAACA,iBAAS;;;;;IAR/FA,eAAqB;IAArBA,wCAAqB;IACrBA,eAAkE;IAAlEA,mGAAkE;IAClEA,eAA+D;IAA/DA,gGAA+D;IAC/DA,eAAyB;IAAzBA,4CAAyB;IACzBA,eAA0B;IAA1BA,6CAA0B;;;;;;;;;;;AChBpC,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,UAAsB,EAAUC,QAAkB;IAAlD,eAAU,GAAVD,UAAU;IAAsB,aAAQ,GAARC,QAAQ;IAN5D,gBAAW,GAAoB,EAAE;IACjC,gCAA2B,GAAa,EAAE;IAC1C,6BAAwB,GAAa,EAAE;IAEvC,iBAAY,GAAY,KAAK;IAG3B,IAAI,CAACC,oBAAoB,GAAG,CAAC;EAC/B;EAEAC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACJ,UAAU,CAACI,cAAc,EAAE,CAACC,SAAS,CACxCC,QAAQ,IAAG;MACT,IAAI,CAACC,WAAW,GAAGD,QAAQ;MAC3B,IAAI,CAACE,wBAAwB,EAAE;MAC/B,IAAI,CAACC,qBAAqB,EAAE;IAC9B,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAF,wBAAwB;IACtB,IAAI,CAACK,2BAA2B,GAAG,IAAI,CAACN,WAAW,CAACO,GAAG,CAACC,UAAU,IAAG;MACnE,OAAOA,UAAU,CAACC,iBAAiB,GAC/B,IAAI,CAACf,QAAQ,CAACgB,SAAS,CAACF,UAAU,CAACC,iBAAiB,EAAE,YAAY,CAAE,GACpE,EAAE;IACR,CAAC,CAAC;EACJ;EAEAP,qBAAqB;IACnB,IAAI,CAACS,wBAAwB,GAAG,IAAI,CAACX,WAAW,CAACO,GAAG,CAACC,UAAU,IAAG;MAChE,OAAOA,UAAU,CAACI,cAAc,GAC5B,IAAI,CAAClB,QAAQ,CAACgB,SAAS,CAACF,UAAU,CAACI,cAAc,EAAE,YAAY,CAAE,GACjE,EAAE;IACR,CAAC,CAAC;EACJ;EAEAC,gBAAgB,CAACL,UAAyB;IACxC,MAAMM,GAAG,GAAG,wCAAwCN,UAAU,CAACO,EAAE,EAAE;IACnE,IAAI,CAACtB,UAAU,CAACoB,gBAAgB,CAACC,GAAG,EAAEN,UAAU,CAAC,CAACV,SAAS,CACzDC,QAAQ,IAAG;MACTK,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACrD,CAAC,EACDF,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,KAAK,CAAC;IAC1D,CAAC,CACF;EACH;EAEAa,gBAAgB,CAACR,UAAyB;IACxC,MAAMM,GAAG,GAAG,wCAAwCN,UAAU,CAACO,EAAE,EAAE;IACnE,IAAI,CAACtB,UAAU,CAACuB,gBAAgB,CAACF,GAAG,CAAC,CAAChB,SAAS,CAC7CC,QAAQ,IAAG;MACTK,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC,EACDF,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,KAAK,CAAC;IACxD,CAAC,CACF;EACH;EAEAc,YAAY,CAACT,UAAyB,GAEtC;EAEAU,YAAY;IACV,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;;AA1EW5B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVzBlC,0BAAI;MAAAA,qCAAqB;MAAAA,iBAAK;MAC9BA,qCAEsC;MACpCA,6EAKY;MACZA,8EASc;MACdA,8EAac;MAChBA,iBAAU;MAEVA,yCAAkH;MAA9BA;QAAA,OAAcmC,kBAAc;MAAA,EAAC;MAACnC,iBAAiB;;;MAnCtHA,eAAqB;MAArBA,uCAAqB;MAmClBA,eAAqC;MAArCA,uDAAqC","names":["i0","AppComponent","constructor","apiService","datePipe","selectedMedicamentId","ngOnInit","getMedicaments","subscribe","response","medicaments","formatManufacturingDates","formatExpirationDates","error","console","log","formattedManufacturingDates","map","medicament","manufacturingDate","transform","formattedExpirationDates","expirationDate","updateMedicament","url","id","deleteMedicament","getUnitPrice","onCloseModal","modalVisible","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\angular\\front\\src\\app\\app.component.html","C:\\angular\\front\\src\\app\\app.component.ts"],"sourcesContent":["<h2>Lista de Medicamentos</h2>\n<p-table #dt [value]=\"medicaments\" [paginator]=\"true\" styleClass=\"p-datatable-gridlines\" [rows]=\"5\" [showCurrentPageReport]=\"true\" [tableStyle]=\"{ 'min-width': '50rem' }\"\n  currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n  [rowsPerPageOptions]=\"[10, 25, 50]\">\n  <ng-template pTemplate=\"caption\">\n    <div class=\"table-header\">\n        Medicaments\n\n    </div>\n</ng-template>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th id=\"name\" scope=\"col\">Nombre</th>\n      <th id=\"manufacturingDate\" scope=\"col\">Fecha de Fabricación</th>\n      <th id=\"expirationDate\" scope=\"col\">Fecha de Vencimiento</th>\n      <th id=\"quantity\" scope=\"col\">Cantidad en Stock</th>\n      <th id=\"unitPrice\" scope=\"col\">Valor Unitario</th>\n      <th id=\"actions\" scope=\"col\">Acciones</th> <!-- Nueva columna para las acciones -->\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-medicament>\n    <tr>\n      <td>{{ medicament.name }}</td>\n      <td>{{ formattedManufacturingDates[medicaments.indexOf(medicament)] }}</td>\n      <td>{{ formattedExpirationDates[medicaments.indexOf(medicament)] }}</td>\n      <td>{{ medicament.quantity }}</td>\n      <td>{{ medicament.unitPrice }}</td>\n      <td>\n        <button pButton type=\"button\" icon=\"pi pi-pencil\" (click)=\"updateMedicament(medicament)\"></button>\n        <button pButton type=\"button\" icon=\"pi pi-shopping-cart\" (click)=\"getUnitPrice(medicament)\"></button>\n        <button pButton type=\"button\" icon=\"pi pi-trash\" (click)=\"deleteMedicament(medicament)\"></button>\n      </td>\n    </tr>    \n  </ng-template>\n</p-table>\n\n<app-sell-modal [medicamentId]=\"selectedMedicamentId\" [modalVisible]=\"modalVisible\" (closeModal)=\"onCloseModal()\"></app-sell-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { MedicamentDto } from './dto/medicament.dto';\nimport { ApiService } from './service/api.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  medicaments: MedicamentDto[] = [];\n  formattedManufacturingDates: string[] = [];\n  formattedExpirationDates: string[] = [];\n  selectedMedicamentId: number;\n  modalVisible: boolean = false;\n\n  constructor(private apiService: ApiService, private datePipe: DatePipe) {\n    this.selectedMedicamentId = 0;\n  }\n\n  ngOnInit() {\n    this.getMedicaments();\n  }\n\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(\n      response => {\n        this.medicaments = response;\n        this.formatManufacturingDates();\n        this.formatExpirationDates();\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate\n        ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate\n        ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  updateMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(\n      response => {\n        console.log('Medicamento actualizado exitosamente');\n      },\n      error => {\n        console.log('Error al actualizar el medicamento', error);\n      }\n    );\n  }\n\n  deleteMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(\n      response => {\n        console.log('Medicamento eliminado exitosamente');\n      },\n      error => {\n        console.log('Error al eliminar el medicamento', error);\n      }\n    );\n  }\n\n  getUnitPrice(medicament: MedicamentDto) {\n    \n  }\n\n  onCloseModal() {\n    this.modalVisible = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}