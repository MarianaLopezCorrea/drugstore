{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./sell-modal/sell-modal.component\";\nfunction AppComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_21_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const medicament_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.getUnitPrice(medicament_r1));\n    });\n    i0.ɵɵtext(15, \"Obtener Precio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_21_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const medicament_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.openModal(medicament_r1.id));\n    });\n    i0.ɵɵtext(17, \"Vender\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_21_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const medicament_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateMedicament(medicament_r1));\n    });\n    i0.ɵɵtext(19, \"Actualizar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_21_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const medicament_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteMedicament(medicament_r1));\n    });\n    i0.ɵɵtext(21, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medicament_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formattedManufacturingDates[i_r2]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formattedExpirationDates[i_r2]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r1.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r1.unitPrice);\n  }\n}\nexport class AppComponent {\n  constructor(apiService, datePipe) {\n    this.apiService = apiService;\n    this.datePipe = datePipe;\n    this.medicaments = [];\n    this.formattedManufacturingDates = [];\n    this.formattedExpirationDates = [];\n    this.modalVisible = false;\n    this.selectedMedicamentId = 0;\n  }\n  ngOnInit() {\n    this.getMedicaments();\n  }\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(response => {\n      this.medicaments = response;\n      this.formatManufacturingDates();\n      this.formatExpirationDates();\n    }, error => {\n      console.log(error);\n    });\n  }\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  updateMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(response => {\n      console.log('Medicamento actualizado exitosamente');\n    }, error => {\n      console.log('Error al actualizar el medicamento', error);\n    });\n  }\n  deleteMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(response => {\n      console.log('Medicamento eliminado exitosamente');\n    }, error => {\n      console.log('Error al eliminar el medicamento', error);\n    });\n  }\n  getUnitPrice(medicament) {\n    const quantity = 10;\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}?quantity=${quantity}`;\n    this.apiService.getUnitPrice(url).subscribe(unitPrice => {\n      console.log('Precio unitario obtenido:', unitPrice);\n      this.modalVisible = true;\n    }, error => {\n      console.log('Error al obtener el precio unitario del medicamento', error);\n    });\n  }\n  openModal(medicamentId) {\n    this.selectedMedicamentId = medicamentId;\n    this.modalVisible = true;\n  }\n  onCloseModal() {\n    this.modalVisible = false;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.DatePipe));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[1, \"medicament-list\"], [4, \"ngFor\", \"ngForOf\"], [3, \"medicamentId\", \"modalVisible\", \"closeModal\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Lista de Medicamentos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Fecha de Fabricaci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Fecha de Expiraci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Cantidad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Precio Unitario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"tbody\");\n      i0.ɵɵtemplate(21, AppComponent_tr_21_Template, 22, 6, \"tr\", 1);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"app-sell-modal\", 2);\n      i0.ɵɵlistener(\"closeModal\", function AppComponent_Template_app_sell_modal_closeModal_22_listener() {\n        return ctx.onCloseModal();\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", ctx.medicaments);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"medicamentId\", ctx.selectedMedicamentId)(\"modalVisible\", ctx.modalVisible);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.SellModalComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","apiService","datePipe","selectedMedicamentId","ngOnInit","getMedicaments","subscribe","response","medicaments","formatManufacturingDates","formatExpirationDates","error","console","log","formattedManufacturingDates","map","medicament","manufacturingDate","transform","formattedExpirationDates","expirationDate","updateMedicament","url","id","deleteMedicament","getUnitPrice","quantity","unitPrice","modalVisible","openModal","medicamentId","onCloseModal","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\angular\\front\\src\\app\\app.component.html","C:\\angular\\front\\src\\app\\app.component.ts"],"sourcesContent":["<div class=\"medicament-list\">\n  <h2>Lista de Medicamentos</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Nombre</th>\n        <th>Fecha de Fabricación</th>\n        <th>Fecha de Expiración</th>\n        <th>Cantidad</th>\n        <th>Precio Unitario</th>\n        <th>Acciones</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let medicament of medicaments; let i = index\">\n        <td>{{ medicament.id }}</td>\n        <td>{{ medicament.name }}</td>\n        <td>{{ formattedManufacturingDates[i] }}</td>\n        <td>{{ formattedExpirationDates[i] }}</td>\n        <td>{{ medicament.quantity }}</td>\n        <td>{{ medicament.unitPrice }}</td>\n        <td>\n          <button (click)=\"getUnitPrice(medicament)\">Obtener Precio</button>\n          <button (click)=\"openModal(medicament.id)\">Vender</button>\n          <button (click)=\"updateMedicament(medicament)\">Actualizar</button>\n          <button (click)=\"deleteMedicament(medicament)\">Eliminar</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<app-sell-modal [medicamentId]=\"selectedMedicamentId\" [modalVisible]=\"modalVisible\" (closeModal)=\"onCloseModal()\"></app-sell-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { MedicamentDto } from './dto/medicament.dto';\nimport { ApiService } from './service/api.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  medicaments: MedicamentDto[] = [];\n  formattedManufacturingDates: string[] = [];\n  formattedExpirationDates: string[] = [];\n  selectedMedicamentId: number;\n  modalVisible: boolean = false;\n\n  constructor(private apiService: ApiService, private datePipe: DatePipe) {\n    this.selectedMedicamentId = 0;\n  }\n\n  ngOnInit() {\n    this.getMedicaments();\n  }\n\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(\n      response => {\n        this.medicaments = response;\n        this.formatManufacturingDates();\n        this.formatExpirationDates();\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate\n        ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate\n        ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  updateMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(\n      response => {\n        console.log('Medicamento actualizado exitosamente');\n      },\n      error => {\n        console.log('Error al actualizar el medicamento', error);\n      }\n    );\n  }\n\n  deleteMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(\n      response => {\n        console.log('Medicamento eliminado exitosamente');\n      },\n      error => {\n        console.log('Error al eliminar el medicamento', error);\n      }\n    );\n  }\n\n  getUnitPrice(medicament: MedicamentDto) {\n    const quantity = 10;\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}?quantity=${quantity}`;\n    this.apiService.getUnitPrice(url).subscribe(\n      unitPrice => {\n        console.log('Precio unitario obtenido:', unitPrice);\n        this.modalVisible = true;\n      },\n      error => {\n        console.log('Error al obtener el precio unitario del medicamento', error);\n      }\n    );\n  }\n\n  openModal(medicamentId: number) {\n    this.selectedMedicamentId = medicamentId;\n    this.modalVisible = true;\n  }\n\n  onCloseModal() {\n    this.modalVisible = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}