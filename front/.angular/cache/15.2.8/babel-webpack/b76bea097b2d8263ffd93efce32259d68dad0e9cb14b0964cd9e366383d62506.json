{"ast":null,"code":"import _asyncToGenerator from \"C:/angular/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ApiService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.authenticated = false;\n    this.headers = new HttpHeaders();\n    this.headers.append('Content-Type', 'application/json');\n    /*if (sessionStorage.getItem('user_cod')) {\r\n      this.user = JSON.parse(sessionStorage.getItem('user_cod')!);\r\n      sessionStorage.setItem('user_token', this.user.token);\r\n            this.authenticated = true;\r\n      this.headers = new HttpHeaders({ Authorization: this.user.token });\r\n      this.headers.append('Content-Type', 'application/json');\r\n    }*/\n  }\n\n  get(url, params = null) {\n    let options = {\n      headers: this.headers,\n      params: params,\n      withCredentials: true\n    };\n    return this.httpClient.get(url, options);\n  }\n  get_a(url, params = null) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let options = {\n        headers: _this.headers,\n        params: params,\n        withCredentials: true\n      };\n      return _this.httpClient.get(url, options).toPromise();\n      ;\n    })();\n  }\n  get_a1(url, params = null) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      let options = {\n        headers: _this2.headers,\n        params: params,\n        withCredentials: true\n      };\n      return _this2.httpClient.get(url, options).toPromise();\n      ;\n    })();\n  }\n  get_(url) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      let options = {\n        headers: _this3.headers,\n        withCredentials: true\n      };\n      var response = _this3.httpClient.get(url, options).toPromise();\n      return JSON.stringify(response);\n    })();\n  }\n  post(url, object, params = null) {\n    let options = {\n      headers: this.headers,\n      params: params,\n      withCredentials: true\n    };\n    return this.httpClient.post(url, object, options);\n  }\n  put(url, id, object) {\n    let options = {\n      headers: this.headers,\n      withCredentials: true\n    };\n    return this.httpClient.put(url + \"/\" + id, object, options).pipe(catchError(this.handleError));\n  }\n  put_a(url, object) {\n    let options = {\n      headers: this.headers,\n      withCredentials: true\n    };\n    return this.httpClient.put(url, object, options).pipe(catchError(this.handleError));\n  }\n  delete(url) {\n    let options = {\n      headers: this.headers,\n      withCredentials: true\n    };\n    return this.httpClient.delete(url, options);\n  }\n  delete_url(url) {\n    let options = {\n      headers: this.headers,\n      withCredentials: true\n    };\n    return this.httpClient.delete(url, options).pipe(catchError(this.handleError));\n  }\n  /*authenticate(id: string, email: string, nombre: string, apellidos: string, rol: string, menu: any) {\r\n    this.user.token = '122544';\r\n    this.headers = new HttpHeaders({ Authorization: this.user.token });\r\n    this.headers.append('Content-Type', 'application/json');\r\n    this.authenticated = true;\r\n        this.user.id = Number(id);\r\n    this.user.email = email;\r\n    this.user.nombre = nombre;\r\n        this.user.apellidos = apellidos;\r\n    this.user.rol = rol;\r\n    this.user.menu = menu;\r\n        sessionStorage.setItem('user_cod', JSON.stringify(this.user));\r\n  }*/\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('user_cod');\n    return !(user === null);\n  }\n  /*logOut() {\r\n    this.authenticated = false;\r\n    this.user = new User();\r\n    sessionStorage.removeItem('user_cod');\r\n    this.headers = new HttpHeaders();\r\n    this.headers.append('Content-Type', 'application/json');\r\n    this.router.navigate([\"personas\"])\r\n  }*/\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error[1];\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.error[1]}`;\n    }\n    if (error.status == 402) {\n      window.alert(errorMessage);\n    } else {\n      console.error(error);\n    }\n    return throwError(errorMessage);\n  }\n  isLogged() {\n    return this.authenticated;\n  }\n  /*public access(path: any) {\r\n    if (this.user.permission == null) return false;\r\n    for (let element of this.user.permission) {\r\n      if (element.slug == path) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }*/\n  dateToYMD(date) {\n    var d = date.getDate();\n    var m = date.getMonth() + 1; //Month from 0 to 11\n    var y = date.getFullYear();\n    return '' + y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\n  }\n  readFile(file, size) {\n    return new Promise((resolve, reject) => {\n      if (file.size < size) {\n        var myReader = new FileReader();\n        myReader.onloadend = e => {\n          resolve({\n            result: myReader.result,\n            type: file.type,\n            name: file.name,\n            size: file.size\n          });\n        };\n        myReader.readAsDataURL(file);\n      } else {\n        throw new Error(\"El archivo supera el peso permitido\");\n      }\n    });\n  }\n  /*public download(id: any) {\r\n    this.get(`${environment.baseUrl.concat('/data_file/' + id)}`).subscribe((data: any) => {\r\n      const source = atob(data.data);\r\n      const link = document.createElement(\"a\");\r\n      link.href = source;\r\n      link.download = data.name;\r\n      link.click();\r\n    });\r\n  }*/\n  getApplyToChallenge() {\n    return sessionStorage.getItem('preApply');\n  }\n  removeApplyToChallenge() {\n    sessionStorage.removeItem('preApply');\n  }\n  isApplyingToChallenge() {\n    return sessionStorage.getItem('preApply') != null;\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","throwError","catchError","ApiService","constructor","httpClient","router","authenticated","headers","append","get","url","params","options","withCredentials","get_a","toPromise","get_a1","get_","response","JSON","stringify","post","object","put","id","pipe","handleError","put_a","delete","delete_url","isUserLoggedIn","user","sessionStorage","getItem","error","errorMessage","ErrorEvent","status","window","alert","console","isLogged","dateToYMD","date","d","getDate","m","getMonth","y","getFullYear","readFile","file","size","Promise","resolve","reject","myReader","FileReader","onloadend","e","result","type","name","readAsDataURL","Error","getApplyToChallenge","removeApplyToChallenge","removeItem","isApplyingToChallenge","factory","providedIn"],"sourceRoot":"","sources":["C:\\angular\\front\\src\\app\\service\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private headers: HttpHeaders;\n  public authenticated: boolean;\n\n  constructor( private httpClient: HttpClient, private router: Router ) {\n    this.authenticated = false;\n    this.headers = new HttpHeaders();\n    this.headers.append('Content-Type', 'application/json');\n\n    /*if (sessionStorage.getItem('user_cod')) {\n      this.user = JSON.parse(sessionStorage.getItem('user_cod')!);\n      sessionStorage.setItem('user_token', this.user.token);\n\n      this.authenticated = true;\n      this.headers = new HttpHeaders({ Authorization: this.user.token });\n      this.headers.append('Content-Type', 'application/json');\n    }*/\n  }\n\n  public get(url: string, params: any = null) {\n    let options = { headers: this.headers, params: params, withCredentials: true }\n    return this.httpClient.get(url, options);\n  }\n\n  public async get_a(url: string, params: any = null): Promise<any> {\n    let options = { headers: this.headers, params: params, withCredentials: true }\n    return this.httpClient.get(url, options).toPromise();;\n  }\n\n  public async get_a1(url: string, params: any = null): Promise<any> {\n    let options = { headers: this.headers, params: params, withCredentials: true }\n    return this.httpClient.get(url, options).toPromise();;\n  }\n\n  public async get_(url: string) {\n    let options = { headers: this.headers, withCredentials: true };\n    var response = this.httpClient.get(url, options).toPromise();\n    return JSON.stringify(response);\n  }\n\n  public post(url: string, object: any, params: any = null): Observable<any> {\n    let options = { headers: this.headers, params: params, withCredentials: true };\n    return this.httpClient.post(url, object, options);\n  }\n\n  public put(url: string, id: any, object: any) {\n    let options = { headers: this.headers, withCredentials: true };\n    return this.httpClient.put(url + \"/\" + id, object, options)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  public put_a(url: string, object: any) {\n    let options = { headers: this.headers, withCredentials: true };\n    return this.httpClient.put(url, object, options)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  public delete(url: string) {\n    let options = { headers: this.headers, withCredentials: true };\n    return this.httpClient.delete(url, options);\n  }\n\n  public delete_url(url: string) {\n    let options = { headers: this.headers, withCredentials: true };\n    return this.httpClient.delete(url, options)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  /*authenticate(id: string, email: string, nombre: string, apellidos: string, rol: string, menu: any) {\n    this.user.token = '122544';\n    this.headers = new HttpHeaders({ Authorization: this.user.token });\n    this.headers.append('Content-Type', 'application/json');\n    this.authenticated = true;\n\n    this.user.id = Number(id);\n    this.user.email = email;\n    this.user.nombre = nombre;\n\n    this.user.apellidos = apellidos;\n    this.user.rol = rol;\n    this.user.menu = menu;\n\n    sessionStorage.setItem('user_cod', JSON.stringify(this.user));\n  }*/\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('user_cod');\n    return !(user === null);\n  }\n\n  /*logOut() {\n    this.authenticated = false;\n    this.user = new User();\n    sessionStorage.removeItem('user_cod');\n    this.headers = new HttpHeaders();\n    this.headers.append('Content-Type', 'application/json');\n    this.router.navigate([\"personas\"])\n  }*/\n\n  handleError(error: any) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error[1];\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.error[1]}`;\n    }\n    if (error.status == 402) {\n      window.alert(errorMessage);\n    } else {\n      console.error(error);\n    }\n    return throwError(errorMessage);\n  }\n\n  public isLogged() {\n    return this.authenticated;\n  }\n\n\n  /*public access(path: any) {\n    if (this.user.permission == null) return false;\n    for (let element of this.user.permission) {\n      if (element.slug == path) {\n        return true;\n      }\n    }\n    return false;\n  }*/\n\n  public dateToYMD(date: Date): any {\n    var d = date.getDate();\n    var m = date.getMonth() + 1; //Month from 0 to 11\n    var y = date.getFullYear();\n    return '' + y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\n  }\n\n  public readFile(file: File, size: number) {\n    return new Promise((resolve, reject) => {\n      if (file.size < size) {\n        var myReader: FileReader = new FileReader();\n\n        myReader.onloadend = (e) => {\n          resolve({\n            result: myReader.result,\n            type: file.type,\n            name: file.name,\n            size: file.size\n          });\n        }\n        myReader.readAsDataURL(file);\n\n      } else {\n        throw new Error(\"El archivo supera el peso permitido\");\n\n      }\n    });\n  }\n\n  /*public download(id: any) {\n    this.get(`${environment.baseUrl.concat('/data_file/' + id)}`).subscribe((data: any) => {\n      const source = atob(data.data);\n      const link = document.createElement(\"a\");\n      link.href = source;\n      link.download = data.name;\n      link.click();\n    });\n  }*/\n\n  public getApplyToChallenge() {\n    return sessionStorage.getItem('preApply');\n  }\n\n  public removeApplyToChallenge() {\n    sessionStorage.removeItem('preApply');\n  }\n\n  public isApplyingToChallenge(): boolean {\n    return sessionStorage.getItem('preApply') != null;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}