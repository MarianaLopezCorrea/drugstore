{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/table\";\nfunction AppComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 3);\n    i0.ɵɵtext(2, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 4);\n    i0.ɵɵtext(4, \"Fecha de Fabricaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 5);\n    i0.ɵɵtext(6, \"Fecha de Vencimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 6);\n    i0.ɵɵtext(8, \"Cantidad en Stock\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 7);\n    i0.ɵɵtext(10, \"Valor Unitario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 8);\n    i0.ɵɵtext(12, \"Acciones\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_ng_template_4_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_4_tr_0_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const medicament_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.updateMedicament(medicament_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_4_tr_0_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const medicament_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.getUnitPrice(medicament_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_4_tr_0_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const medicament_r4 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.deleteMedicament(medicament_r4));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medicament_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.formattedManufacturingDates[i_r5]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.formattedExpirationDates[i_r5]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r4.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r4.unitPrice);\n  }\n}\nfunction AppComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AppComponent_ng_template_4_tr_0_Template, 15, 5, \"tr\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.medicaments);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"min-width\": \"50rem\"\n  };\n};\nexport class AppComponent {\n  constructor(apiService, datePipe) {\n    this.apiService = apiService;\n    this.datePipe = datePipe;\n    this.medicaments = [];\n    this.formattedManufacturingDates = [];\n    this.formattedExpirationDates = [];\n  }\n  ngOnInit() {\n    this.getMedicaments();\n  }\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(data => {\n      this.medicaments = data;\n      this.formatManufacturingDates();\n      this.formatExpirationDates();\n    }, error => {\n      console.log(error);\n    });\n  }\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy') : '';\n    });\n  }\n  editMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(response => {\n      console.log('Medicamento actualizado exitosamente');\n    }, error => {\n      console.log('Error al actualizar el medicamento', error);\n    });\n  }\n  deleteMedicament(medicament) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(response => {\n      console.log('Medicamento eliminado exitosamente');\n    }, error => {\n      console.log('Error al eliminar el medicamento', error);\n    });\n  }\n  venderMedicamento(medicament) {\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}`;\n    this.apiService.getUnitPrice(url).subscribe(unitPrice => {\n      console.log('Precio unitario obtenido:', unitPrice);\n      // Aquí puedes realizar alguna acción adicional después de obtener el precio unitario\n      // y proceder con la venta del medicamento\n    }, error => {\n      console.log('Error al obtener el precio unitario del medicamento', error);\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.DatePipe));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 5,\n  consts: [[3, \"value\", \"paginator\", \"rows\", \"tableStyle\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"id\", \"name\", \"scope\", \"col\"], [\"id\", \"manufacturingDate\", \"scope\", \"col\"], [\"id\", \"expirationDate\", \"scope\", \"col\"], [\"id\", \"quantity\", \"scope\", \"col\"], [\"id\", \"unitPrice\", \"scope\", \"col\"], [\"id\", \"actions\", \"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-shopping-cart\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-trash\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Lista de Medicamentos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p-table\", 0);\n      i0.ɵɵtemplate(3, AppComponent_ng_template_3_Template, 13, 0, \"ng-template\", 1);\n      i0.ɵɵtemplate(4, AppComponent_ng_template_4_Template, 1, 1, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.medicaments)(\"paginator\", true)(\"rows\", 1)(\"tableStyle\", i0.ɵɵpureFunction0(4, _c0));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.PrimeTemplate, i4.ButtonDirective, i5.Table],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","apiService","datePipe","ngOnInit","getMedicaments","subscribe","data","medicaments","formatManufacturingDates","formatExpirationDates","error","console","log","formattedManufacturingDates","map","medicament","manufacturingDate","transform","formattedExpirationDates","expirationDate","editMedicament","url","id","updateMedicament","response","deleteMedicament","venderMedicamento","getUnitPrice","unitPrice","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\angular\\front\\src\\app\\app.component.html","C:\\angular\\front\\src\\app\\app.component.ts"],"sourcesContent":["<h2>Lista de Medicamentos</h2>\n<p-table [value]=\"medicaments\" [paginator]=\"true\" [rows]=\"1\" [tableStyle]=\"{ 'min-width': '50rem' }\">\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th id=\"name\" scope=\"col\">Nombre</th>\n      <th id=\"manufacturingDate\" scope=\"col\">Fecha de Fabricación</th>\n      <th id=\"expirationDate\" scope=\"col\">Fecha de Vencimiento</th>\n      <th id=\"quantity\" scope=\"col\">Cantidad en Stock</th>\n      <th id=\"unitPrice\" scope=\"col\">Valor Unitario</th>\n      <th id=\"actions\" scope=\"col\">Acciones</th> <!-- Nueva columna para las acciones -->\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-medicament>\n    <tr *ngFor=\"let medicament of medicaments; let i = index\">\n      <td>{{ medicament.name }}</td>\n      <td>{{ formattedManufacturingDates[i] }}</td>\n      <td>{{ formattedExpirationDates[i] }}</td>\n      <td>{{ medicament.quantity }}</td>\n      <td>{{ medicament.unitPrice }}</td>\n      <td>\n        <button pButton type=\"button\" icon=\"pi pi-pencil\" (click)=\"updateMedicament(medicament)\"></button>\n        <button pButton type=\"button\" icon=\"pi pi-shopping-cart\" (click)=\"getUnitPrice(medicament)\"></button>\n        <button pButton type=\"button\" icon=\"pi pi-trash\" (click)=\"deleteMedicament(medicament)\"></button>\n      </td>\n    </tr>    \n  </ng-template>\n</p-table>\n","import { Component, OnInit } from '@angular/core';\nimport { MedicamentDto } from './dto/medicament.dto';\nimport { ApiService } from './service/api.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  medicaments: MedicamentDto[] = [];\n  formattedManufacturingDates: string[] = [];\n  formattedExpirationDates: string[] = [];\n\n  constructor(private apiService: ApiService, private datePipe: DatePipe) {}\n\n  ngOnInit() {\n    this.getMedicaments();\n  }\n\n  getMedicaments() {\n    this.apiService.getMedicaments().subscribe(\n      (data: MedicamentDto[]) => {\n        this.medicaments = data;\n        this.formatManufacturingDates();\n        this.formatExpirationDates();\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  formatManufacturingDates() {\n    this.formattedManufacturingDates = this.medicaments.map(medicament => {\n      return medicament.manufacturingDate\n        ? this.datePipe.transform(medicament.manufacturingDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  formatExpirationDates() {\n    this.formattedExpirationDates = this.medicaments.map(medicament => {\n      return medicament.expirationDate\n        ? this.datePipe.transform(medicament.expirationDate, 'dd/MM/yyyy')!\n        : '';\n    });\n  }\n\n  editMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.updateMedicament(url, medicament).subscribe(\n      (response) => {\n        console.log('Medicamento actualizado exitosamente');\n      },\n      (error) => {\n        console.log('Error al actualizar el medicamento', error);\n      }\n    );\n  }\n\n  deleteMedicament(medicament: MedicamentDto) {\n    const url = `http://localhost:8090/api/medicament/${medicament.id}`;\n    this.apiService.deleteMedicament(url).subscribe(\n      (response) => {\n        console.log('Medicamento eliminado exitosamente');\n      },\n      (error) => {\n        console.log('Error al eliminar el medicamento', error);\n      }\n    );\n  }\n\n  venderMedicamento(medicament: Medicament) {\n    const url = `http://localhost:8091/api/sale/get_unit_price/${medicament.id}`;\n    this.apiService.getUnitPrice(url).subscribe(\n      (unitPrice: number) => {\n        console.log('Precio unitario obtenido:', unitPrice);\n        // Aquí puedes realizar alguna acción adicional después de obtener el precio unitario\n        // y proceder con la venta del medicamento\n      },\n      (error) => {\n        console.log('Error al obtener el precio unitario del medicamento', error);\n      }\n    );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}